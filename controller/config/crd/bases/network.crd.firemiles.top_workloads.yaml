
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: workloads.network.crd.firemiles.top
spec:
  group: network.crd.firemiles.top
  names:
    kind: Workload
    listKind: WorkloadList
    plural: workloads
    singular: workload
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Workload is the Schema for the workloads API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: WorkloadSpec defines the desired state of Workload
          properties:
            containerID:
              description: ContainerID is pause container id this workload bind to
              type: string
            node:
              description: Node is where workload running
              type: string
            pod:
              description: Pod name this workload represent in same namespace
              type: string
            podUID:
              description: Pod UID
              type: string
          required:
          - containerID
          - node
          - pod
          - podUID
          type: object
        status:
          description: WorkloadStatus defines the observed state of Workload
          properties:
            interfaces:
              description: 'Interfaces : interfaces bind to workloads, first interface
                is primary name: {network}-{ip}'
              items:
                properties:
                  endpoint:
                    description: EndpointClaim name
                    type: string
                  master:
                    description: Master if true, this is master interface
                    type: boolean
                required:
                - endpoint
                - master
                type: object
              type: array
            phase:
              description: 'Phase : Initial, Ready'
              type: string
          required:
          - interfaces
          - phase
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
